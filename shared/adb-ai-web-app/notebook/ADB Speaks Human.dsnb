[
  {
    "name" : "ADB Speaks Human",
    "description" : null,
    "tags" : null,
    "version" : "6",
    "layout" : "zeppelin",
    "type" : "low",
    "readOnly" : false,
    "snapshot" : false,
    "template" : "dsrgmn3y",
    "templateConfig" : "{\"visualization\":{\"filters\":[{\"_id\":1583324064459,\"type\":\"styling\",\"enabled\":true,\"conditions\":{\"operator\":\"and\",\"conditions\":[{\"property\":\"hiddenConnection\",\"operator\":\"*\",\"value\":\"\"}]},\"component\":\"edge\",\"target\":\"edge\",\"properties\":{\"colors\":[\"rgba(0, 0, 0, 0.1)\"],\"style\":[\"dashed\"],\"legendTitle\":[\"Hidden Connection\"]}},{\"_id\":1590499315755,\"type\":\"aggregation\",\"enabled\":true,\"conditions\":{\"operator\":\"and\",\"conditions\":[]},\"component\":\"vertex\",\"target\":\"vertex\",\"properties\":{},\"aggregation\":[{\"source\":\"\",\"type\":\"average\"}]}],\"version\":4}}",
    "paragraphs" : [
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "#Use natural language to query your data",
          "",
          "Autonomous Database makes it simple to query your data using natural language. The person asking the question doesn't need to know where the data is stored, its structure or how to combine it with other data to get results. All of these tasks are handled by a large language model and Autonomous Database.",
          "",
          "The following paragraphs will show you how to:",
          "1. Create an AI profile ",
          "2. Have general AI chat conversations",
          "3. Query data using natural language",
          "4. Show the SQL generated for a query",
          "",
          "## Use AI profiles to access your LLM",
          "Profiles capture the properties of your LLM provider plus the tables and views you want to enable for natural language queries. You can create multiple profiles (e.g. for different providers), although only one is active for a given session.",
          "### Create an AI profile",
          "To get started: you'll need to: ",
          "* Create a credential that is used to sign LLM API requests",
          "* Create a profile that describes your LLM provider and the metadata (schemas, tables, views, etc.) that can be used for natural language queries. You can have multiple profiles - each pointing to different models.",
          "* Set the profile for your session. Because we're accessing a single LLM, create a LOGON trigger that sets the profile for your session."
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : true,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1693272799796,
          "endTime" : 1693272799931,
          "interpreter" : "md.low",
          "taskStatus" : "SUCCESS",
          "status" : "SUCCESS",
          "results" : [
            {
              "message" : "<h1>Use natural language to query your data</h1>\n<p>Autonomous Database makes it simple to query your data using natural language. The person asking the question doesn't need to know where the data is stored, its structure or how to combine it with other data to get results. All of these tasks are handled by a large language model and Autonomous Database.</p>\n<p>The following paragraphs will show you how to:</p>\n<ol>\n<li>Create an AI profile</li>\n<li>Have general AI chat conversations</li>\n<li>Query data using natural language</li>\n<li>Show the SQL generated for a query</li>\n</ol>\n<h2>Use AI profiles to access your LLM</h2>\n<p>Profiles capture the properties of your LLM provider plus the tables and views you want to enable for natural language queries. You can create multiple profiles (e.g. for different providers), although only one is active for a given session.</p>\n<h3>Create an AI profile</h3>\n<p>To get started: you'll need to:</p>\n<ul>\n<li>Create a credential that is used to sign LLM API requests</li>\n<li>Create a profile that describes your LLM provider and the metadata (schemas, tables, views, etc.) that can be used for natural language queries. You can have multiple profiles - each pointing to different models.</li>\n<li>Set the profile for your session. Because we're accessing a single LLM, create a LOGON trigger that sets the profile for your session.</li>\n</ul>\n",
              "type" : "HTML"
            }
          ],
          "forms" : "[]"
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : "Create credential and AI profile",
        "hasTitle" : true,
        "message" : [
          "%script",
          "",
          "begin",
          "",
          "    begin",
          "        -- ~~~~~~~~~~~~~~",
          "        -- A profile needs a credential in order to connect to the LLM",
          "        -- Create a credential: the username can be anything. The password is the ",
          "        -- secret you created with the LLM provider",
          "        -- ~~~~~~~~~~~~~~",
          "        dbms_cloud.create_credential (",
          "            credential_name  => 'OPENAI_CRED',",
          "            username         => 'OPENAI',",
          "            password         => 'your-llm-secret-goes-here'",
          "            );",
          "    exception",
          "        when others then",
          "            dbms_output.put_line(sqlerrm);",
          "    end;",
          "",
          "    -- ~~~~~~~~~~~~~~",
          "    -- drop the AI profile just in case it already exists",
          "    -- ~~~~~~~~~~~~~~",
          "    dbms_cloud_ai.drop_profile(",
          "        profile_name => 'openai_gpt35',",
          "        force => true",
          "    );",
          "",
          "    -- ~~~~~~~~~~~~~~",
          "    -- Specify the LLM provider, your credential",
          "    -- and the tables/views that will be used for queries",
          "    -- You can specify specific tables. Or, omit the table from the object list to ",
          "    -- include all objects in the scheam",
          "    -- ~~~~~~~~~~~~~~",
          "    ",
          "    dbms_cloud_ai.create_profile(",
          "        profile_name => 'openai_gpt35',",
          "        attributes =>       ",
          "            '{\"provider\": \"openai\",",
          "            \"credential_name\": \"OPENAI_CRED\",",
          "            \"object_list\": [{\"owner\": \"MOVIESTREAM\", \"name\": \"movies\"},",
          "                            {\"owner\": \"MOVIESTREAM\", \"name\": \"streams\"},",
          "                            {\"owner\": \"MOVIESTREAM\", \"name\": \"customer_extension\"},",
          "                            {\"owner\": \"MOVIESTREAM\", \"name\": \"pizza_shop\"},",
          "                            {\"owner\": \"MOVIESTREAM\", \"name\": \"actors\"},",
          "                            {\"owner\": \"MOVIESTREAM\", \"name\": \"genre\"},",
          "                            {\"owner\": \"MOVIESTREAM\", \"name\": \"customer_segment\"},",
          "                            {\"owner\": \"MOVIESTREAM\", \"name\": \"customer_contact\"}",
          "                            ]",
          "            }'",
          "        );",
          "",
          "    -- ~~~~~~~~~~~~~~",
          "    -- set the AI profile for this session",
          "    -- ~~~~~~~~~~~~~~",
          "    dbms_cloud_ai.set_profile(",
          "        profile_name => 'openai_gpt35'",
          "    );    ",
          "   ",
          "",
          "end;"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562905851,
          "endTime" : 1694562907392,
          "interpreter" : "script.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : "Create a logon trigger to automatically set the API profile",
        "hasTitle" : true,
        "message" : [
          "%script",
          "",
          "",
          "-- ~~~~~~~~~~~~~~",
          "-- create a logon trigger that will automatically set the profile for new connections session",
          "-- ~~~~~~~~~~~~~~",
          "create or replace trigger set_ai_profile",
          "after logon on schema",
          "begin",
          "",
          "    dbms_cloud_ai.set_profile(",
          "        profile_name => 'openai_gpt35'",
          "    );",
          "",
          "end;"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562144888,
          "endTime" : 1694562145151,
          "interpreter" : "script.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "## Ask natural language questions!",
          "",
          "You can now ask questions using `SELECT AI`. **AI** is a special keyword in the select statement that tells Autonomous Database that the subsequent text will be either or an action or the natural language question.",
          "",
          "Here are the actions:",
          "1. chat    - general AI chat",
          "2. runsql  - [default] ask a question and get a structured result",
          "3. narrate - ask a question and get a conversational result",
          "4. showsql - SQL used to produce the result",
          "",
          "Enough explaining. Just give it a try!",
          "",
          "Start by asking a general question that is not going to be answered by our data. But, the answer may lead to questions that we want to ask of our data:"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1693273238695,
          "endTime" : 1693273238841,
          "interpreter" : "md.low",
          "taskStatus" : "SUCCESS",
          "status" : "SUCCESS",
          "results" : [
            {
              "message" : "<h2>Ask natural language questions!</h2>\n<p>You can now ask questions using <code>SELECT AI</code>. <strong>AI</strong> is a special keyword in the select statement that tells Autonomous Database that the subsequent text will be either or an action or the natural language question.</p>\n<p>Here are the actions:</p>\n<ol>\n<li>chat    - general AI chat</li>\n<li>runsql  - [default] ask a question and get a structured result</li>\n<li>narrate - ask a question and get a conversational result</li>\n<li>showsql - SQL used to produce the result</li>\n</ol>\n<p>Enough explaining. Just give it a try!</p>\n<p>Start by asking a general question that is not going to be answered by our data. But, the answer may lead to questions that we want to ask of our data:</p>\n",
              "type" : "HTML"
            }
          ],
          "forms" : "[]"
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : "Ask a general question",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "select ai chat what are considered the best movies produced in the past 20 years"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"layout\":\"beautify\",\"lastColumns\":[],\"version\":1},\"table\":{\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562152763,
          "endTime" : 1694562157731,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "#### Take a quick look at some tables",
          "Numerous tables were included as part of the AI profile:",
          "* movies",
          "* streams",
          "* customer_extension",
          "* customer_contact",
          "* customer_segment",
          "* pizza_shop",
          "* genre",
          "* actors",
          "",
          "",
          "These are the only tables that will be accessed by natural language queries. Let's take a look at a few of the tables:"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : true,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694564339847,
          "endTime" : 1694564340086,
          "interpreter" : "md.low",
          "taskStatus" : "SUCCESS",
          "status" : "SUCCESS",
          "results" : [
            {
              "message" : "<h4>Take a quick look at some tables</h4>\n<p>Numerous tables were included as part of the AI profile:</p>\n<ul>\n<li>movies</li>\n<li>streams</li>\n<li>customer_extension</li>\n<li>customer_contact</li>\n<li>customer_segment</li>\n<li>pizza_shop</li>\n<li>genre</li>\n<li>actors</li>\n</ul>\n<p>These are the only tables that will be accessed by natural language queries. Let's take a look at a few of the tables:</p>\n",
              "type" : "HTML"
            }
          ],
          "forms" : "[]"
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 4,
        "title" : "Customer movie streams",
        "hasTitle" : true,
        "message" : [
          "%sql ",
          "",
          "",
          "-- transactions - who is watching what movies",
          "--~~~~~~~~~~~~~~~~~~~",
          "",
          "select * from streams where rownum <= 10;"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562229817,
          "endTime" : 1694562229974,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 4,
        "title" : "Movies",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "-- movies and their attributes",
          "--~~~~~~~~~~~~~~~~~~~",
          "",
          "select * from movies where title like '%Godfather%';"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562249998,
          "endTime" : 1694562250260,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 4,
        "title" : "Customer",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "-- customer info",
          "--~~~~~~~~~~~~~~~~~~~",
          "select * from customer_extension where rownum <= 10"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562256912,
          "endTime" : 1694562257121,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "#### See the different types of actions for a simple natural language query",
          "We described the different actions above: runsql, narrate, showsql and chat. Whereas chat is just a general question, narrate and runsql are questions about our data. Take a look at the results from the different actions:"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : true,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1693273376515,
          "endTime" : 1693273376899,
          "interpreter" : "md.low",
          "taskStatus" : "SUCCESS",
          "status" : "SUCCESS",
          "results" : [
            {
              "message" : "<h4>See the different types of actions for a simple natural language query</h4>\n<p>We described the different actions above: runsql, narrate, showsql and chat. Whereas chat is just a general question, narrate and runsql are questions about our data. Take a look at the results from the different actions:</p>\n",
              "type" : "HTML"
            }
          ],
          "forms" : "[]"
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 4,
        "title" : "Action: runsql",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "select ai runsql what are our total sales"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : true,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562312001,
          "endTime" : 1694562313680,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 4,
        "title" : "Action: narrate",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "select ai narrate what are our total sales"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : true,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562318334,
          "endTime" : 1694562321327,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 4,
        "title" : "Action: showsql",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "select ai showsql what are our total sales"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562325390,
          "endTime" : 1694562327063,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "#### Ask tougher questions",
          "That first question was pretty easy. These will be a bit harder. Some things to notice when you check out the generated SQL:",
          "* Finds tables to join",
          "* Determines columns to query - even when the columns aren't mentioned in the query"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : true,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1693273439324,
          "endTime" : 1693273439499,
          "interpreter" : "md.low",
          "taskStatus" : "SUCCESS",
          "status" : "SUCCESS",
          "results" : [
            {
              "message" : "<h4>Ask tougher questions</h4>\n<p>That first question was pretty easy. These will be a bit harder. Some things to notice when you check out the generated SQL:</p>\n<ul>\n<li>Finds tables to join</li>\n<li>Determines columns to query - even when the columns aren't mentioned in the query</li>\n</ul>\n",
              "type" : "HTML"
            }
          ],
          "forms" : "[]"
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : "Sales by movie",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "select ai what are our total sales by movie with best movies first;"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562347576,
          "endTime" : 1694562350339,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : "Joins sales_sample and movie tables",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "select ai showsql what are our total sales by movie with best movies first;"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562363223,
          "endTime" : 1694562365500,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : "Top movies for latest month",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "select ai what are our top 5 selling movies for the latest month;"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562380196,
          "endTime" : 1694562383262,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : "Understand dates",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "select ai showsql what are our top  5 selling movies for the latest month;"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562396116,
          "endTime" : 1694562399512,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : "Harrison Ford movies",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "select ai select ai what are our sales for movies starring Harrison Ford broken out by movie;"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562414762,
          "endTime" : 1694562418424,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : "Model maps starring to ACTOR column",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "select ai showsql select ai what are our sales for movies starring Harrison Ford broken out by movie;"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562434829,
          "endTime" : 1694562438393,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : "How people watch Action/Adventure movies",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "select ai runsql what are the most popular devices when watching Action and Adventure movies;"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562573691,
          "endTime" : 1694562577959,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : "Model knows A&A are genres",
        "hasTitle" : true,
        "message" : [
          "%sql",
          " ",
          "",
          "select ai showsql what are the most popular devices when watching Action and Adventure movies;"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562607459,
          "endTime" : 1694562610643,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "#### Challenge with tables and similar content. Need to create a view.",
          "",
          "",
          "The next question fails. The challenge is when you have multiple tables with similar content - like `CUSTOMER_CONTACT` and `CUSTOMER_EXTENSION`. The model fails to find the right tables.",
          "",
          "After the failed query, you will solve the problem by: ",
          "* creating a view to join `CUSTOMER_CONTACT`, `CUSTOMER_SEGMENT` and `CUSTOMER_SEGMENT`",
          "* updating the AI profile to include this new view",
          "",
          "Then, ask the question again"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : true,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694564468229,
          "endTime" : 1694564468425,
          "interpreter" : "md.low",
          "taskStatus" : "SUCCESS",
          "status" : "SUCCESS",
          "results" : [
            {
              "message" : "<h4>Challenge with tables and similar content. Need to create a view.</h4>\n<p>The next question fails. The challenge is when you have multiple tables with similar content - like <code>CUSTOMER_CONTACT</code> and <code>CUSTOMER_EXTENSION</code>. The model fails to find the right tables.</p>\n<p>After the failed query, you will solve the problem by:</p>\n<ul>\n<li>creating a view to join <code>CUSTOMER_CONTACT</code>, <code>CUSTOMER_SEGMENT</code> and <code>CUSTOMER_SEGMENT</code></li>\n<li>updating the AI profile to include this new view</li>\n</ul>\n<p>Then, ask the question again</p>\n",
              "type" : "HTML"
            }
          ],
          "forms" : "[]"
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : "This question fails",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "select ai What are sales by customer segment"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"layout\":\"beautify\",\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694562926931,
          "endTime" : 1694562931303,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : "Create a view to simplify the content",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "CREATE OR REPLACE VIEW v_customer AS",
          "SELECT",
          "    cc.cust_id,",
          "    cc.last_name,",
          "    cc.first_name,",
          "    cc.email,",
          "    cc.street_address,",
          "    cc.postal_code,",
          "    cc.city,",
          "    cc.state_province,",
          "    cc.country,",
          "    cc.country_code,",
          "    cc.continent,",
          "    cc.yrs_customer,",
          "    ce.age,",
          "    ce.commute_distance,",
          "    ce.credit_balance,",
          "    ce.education,",
          "    ce.full_time,",
          "    ce.gender,",
          "    ce.household_size,    ",
          "    ce.income_level,",
          "    ce.job_type,",
          "    ce.marital_status,",
          "    ce.num_cars,",
          "    ce.pet,",
          "    ce.rent_own,",
          "    ce.segment_id,",
          "    ce.work_experience,",
          "    ce.yrs_current_employer,",
          "    ce.yrs_residence,",
          "    cs.short_name as segment_name",
          "FROM",
          "    customer_extension ce, customer_contact cc, customer_segment cs",
          "WHERE ",
          "    ce.cust_id = cc.cust_id",
          "AND ce.segment_id = cs.segment_id; "
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694563657335,
          "endTime" : 1694563657627,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : "Segment name is part of the view",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "select *",
          "from v_customer",
          "where rownum < 10;"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694563667680,
          "endTime" : 1694563668098,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 0,
        "title" : "Recreate the profile using the view",
        "hasTitle" : true,
        "message" : [
          "%script",
          "",
          "begin",
          "",
          "    -- ~~~~~~~~~~~~~~",
          "    -- drop the current AI profile ",
          "    -- ~~~~~~~~~~~~~~",
          "    dbms_cloud_ai.drop_profile(",
          "        profile_name => 'openai_gpt35',",
          "        force => true",
          "    );",
          "",
          "    -- ~~~~~~~~~~~~~~",
          "    -- change CUSTOMER to the V_CUSTOMER view",
          "    -- ~~~~~~~~~~~~~~",
          "    ",
          "    dbms_cloud_ai.create_profile(",
          "        profile_name => 'openai_gpt35',",
          "        attributes =>       ",
          "            '{\"provider\": \"openai\",",
          "            \"credential_name\": \"OPENAI_CRED\",",
          "            \"object_list\": [{\"owner\": \"MOVIESTREAM\", \"name\": \"movies\"},",
          "                            {\"owner\": \"MOVIESTREAM\", \"name\": \"streams\"},",
          "                            {\"owner\": \"MOVIESTREAM\", \"name\": \"v_customer\"},",
          "                            {\"owner\": \"MOVIESTREAM\", \"name\": \"pizza_shop\"},",
          "                            {\"owner\": \"MOVIESTREAM\", \"name\": \"genre\"},",
          "                            {\"owner\": \"MOVIESTREAM\", \"name\": \"actors\"}",
          "                            ]",
          "            }'",
          "        );",
          "",
          "    -- ~~~~~~~~~~~~~~",
          "    -- set the AI profile for this session",
          "    -- ~~~~~~~~~~~~~~",
          "    dbms_cloud_ai.set_profile(",
          "        profile_name => 'openai_gpt35'",
          "    );    ",
          "   ",
          "",
          "end;"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694563735889,
          "endTime" : 1694563738156,
          "interpreter" : "script.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 0,
        "title" : "Success! Sales by customer segment",
        "hasTitle" : true,
        "message" : [
          "%sql",
          "",
          "",
          "select ai What are sales by customer segment"
        ],
        "selectedVisualization" : "bar",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1694563746036,
          "endTime" : 1694563750252,
          "interpreter" : "sql.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 0,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "## Use a PLSQL API to access the LLM",
          "You can use a PLSQL API to access the LLM. This is useful for tools that are unable to use the SQL interface. Here's a couple examples that use `DBMS_CLOUD_AI.GENERATE` that to translate natural lange to SQL.",
          "",
          "This approach is used by the **Ask Autonomous** APEX app."
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : true,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1692996450084,
          "endTime" : 1692996450217,
          "interpreter" : "md.low",
          "taskStatus" : "SUCCESS",
          "status" : "SUCCESS",
          "results" : [
            {
              "message" : "<h2>Use a PLSQL API to access the LLM</h2>\n<p>You can use a PLSQL API to access the LLM. This is useful for tools that are unable to use the SQL interface. Here's a couple examples that use <code>DBMS_CLOUD_AI.GENERATE</code> that to translate natural lange to SQL.</p>\n<p>This approach is used by the <strong>Ask Autonomous</strong> APEX app.</p>\n",
              "type" : "HTML"
            }
          ],
          "forms" : "[]"
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 0,
        "title" : "Chat using the PLSQL API",
        "hasTitle" : true,
        "message" : [
          "%script",
          "",
          "declare",
          "    l_prompt varchar2(4000) := 'Who is Tom Hanks?';",
          "    l_response clob;",
          "    l_profile_name varchar2(100) := 'openai_gpt35';",
          "begin",
          "    l_response := dbms_cloud_ai.generate(",
          "                    prompt          => l_prompt,",
          "                    profile_name    => l_profile_name,",
          "                    action          => 'chat'                    ",
          "                );",
          "    dbms_output.put_line(l_response);",
          "end;    "
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1692995987217,
          "endTime" : 1692995992072,
          "interpreter" : "script.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 0,
        "title" : "SHOWSQL using the PLSQL API",
        "hasTitle" : true,
        "message" : [
          "%script",
          "",
          "",
          "declare",
          "    l_prompt varchar2(4000) := 'What are our sales of Tom Hanks movies?';",
          "    l_response clob;",
          "    l_profile_name varchar2(100) := 'openai_gpt35';",
          "begin",
          "    l_response := dbms_cloud_ai.generate(",
          "                    prompt          => l_prompt,",
          "                    profile_name    => l_profile_name,",
          "                    action          => 'showsql'                    ",
          "                );",
          "    dbms_output.put_line(l_response);",
          "end; "
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : {
          "startTime" : 1692996119018,
          "endTime" : 1692996125021,
          "interpreter" : "script.low",
          "taskStatus" : null,
          "status" : null,
          "results" : null,
          "forms" : null
        },
        "relations" : [ ],
        "dynamicFormParams" : null
      }
    ]
  }
]